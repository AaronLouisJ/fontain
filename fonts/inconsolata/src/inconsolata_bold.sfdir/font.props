SplineFontDB: 3.0
FontName: Inconsolata-Bold
FullName: Inconsolata Bold
FamilyName: Inconsolata
Weight: Bold
Copyright: Created by Raph Levien using his own tools and FontForge. Copyright 2006 Raph Levien. Released under the Apache 2 license.
Version: 1.015; ttfautohint (v0.92) -l 8 -r 50 -G 200 -x 14 -w "G"
ItalicAngle: 0
UnderlinePosition: -410
UnderlineWidth: 102
Ascent: 1638
Descent: 410
InvalidEm: 0
sfntRevision: 0x00010000
LayerCount: 2
Layer: 0 1 "Back" 1
Layer: 1 1 "Fore" 0
XUID: [1021 159 138986633 8426489]
StyleMap: 0x0000
FSType: 0
OS2Version: 3
OS2_WeightWidthSlopeOnly: 0
OS2_UseTypoMetrics: 0
CreationTime: 1323336420
ModificationTime: 1431365158
PfmFamily: 17
TTFWeight: 700
TTFWidth: 5
LineGap: 0
VLineGap: 0
Panose: 2 11 6 9 3 0 3 0 0 0
OS2TypoAscent: 1759
OS2TypoAOffset: 0
OS2TypoDescent: -389
OS2TypoDOffset: 0
OS2TypoLinegap: 0
OS2WinAscent: 1759
OS2WinAOffset: 0
OS2WinDescent: 389
OS2WinDOffset: 0
HheadAscent: 1759
HheadAOffset: 0
HheadDescent: -389
HheadDOffset: 0
OS2SubXSize: 1331
OS2SubYSize: 1434
OS2SubXOff: 0
OS2SubYOff: 287
OS2SupXSize: 1331
OS2SupYSize: 1434
OS2SupXOff: 0
OS2SupYOff: 983
OS2StrikeYSize: 100
OS2StrikeYPos: 528
OS2CapHeight: 1276
OS2XHeight: 956
OS2Vendor: 'PfEd'
OS2CodePages: 00000013.00000000
OS2UnicodeRanges: 8000002f.0000016b.00000000.00000000
DEI: 91125
TtTable: prep
MPPEM
PUSHB_1
 200
GT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_2
 2048
 2048
MUL
DUP
PUSHB_1
 1
SWAP
WCVTP
DUP
PUSHB_1
 3
SWAP
WCVTF
PUSHB_1
 20
RCVT
DUP
DUP
MPPEM
PUSHB_1
 14
LTEQ
MPPEM
PUSHB_1
 6
GTEQ
AND
IF
PUSHB_1
 52
ELSE
PUSHB_1
 40
EIF
ADD
FLOOR
DUP
ROLL
NEQ
IF
PUSHB_1
 2
CINDEX
SUB
PUSHB_1
 1
RCVT
MUL
SWAP
DIV
PUSHB_1
 2
SWAP
WCVTP
PUSHB_4
 10
 10
 5
 4
CALL
PUSHB_4
 11
 16
 5
 4
CALL
PUSHB_4
 17
 22
 5
 4
CALL
EIF
PUSHB_3
 4
 40
 8
RCVT
GT
WCVTP
PUSHB_4
 11
 16
 6
 4
CALL
PUSHB_2
 6
 1
WCVTP
PUSHB_2
 36
 1
GETINFO
LTEQ
IF
PUSHB_1
 64
GETINFO
IF
PUSHB_2
 6
 3
WCVTP
PUSHB_2
 38
 1
GETINFO
LTEQ
IF
PUSHW_1
 1024
GETINFO
IF
PUSHB_2
 6
 1
WCVTP
EIF
EIF
EIF
EIF
PUSHW_1
 511
SCANCTRL
PUSHB_1
 4
SCANTYPE
PUSHB_2
 5
 0
WCVTP
EndTTInstrs
TtTable: fpgm
PUSHB_1
 0
FDEF
PUSHB_1
 32
ADD
FLOOR
ENDF
PUSHB_1
 1
FDEF
DUP
ABS
DUP
PUSHB_1
 192
LT
PUSHB_1
 4
MINDEX
AND
PUSHB_1
 4
RCVT
OR
IF
POP
SWAP
POP
ELSE
ROLL
IF
DUP
PUSHB_1
 80
LT
IF
POP
PUSHB_1
 64
EIF
ELSE
DUP
PUSHB_1
 56
LT
IF
POP
PUSHB_1
 56
EIF
EIF
DUP
PUSHB_1
 10
RCVT
SUB
ABS
PUSHB_1
 40
LT
IF
POP
PUSHB_1
 10
RCVT
DUP
PUSHB_1
 48
LT
IF
POP
PUSHB_1
 48
EIF
ELSE
DUP
PUSHB_1
 192
LT
IF
DUP
FLOOR
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 10
LT
IF
ADD
ELSE
DUP
PUSHB_1
 32
LT
IF
POP
PUSHB_1
 10
ADD
ELSE
DUP
PUSHB_1
 54
LT
IF
POP
PUSHB_1
 54
ADD
ELSE
ADD
EIF
EIF
EIF
ELSE
PUSHB_1
 0
CALL
EIF
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
EIF
ENDF
PUSHB_1
 2
FDEF
DUP
RCVT
DUP
PUSHB_1
 4
CINDEX
SUB
ABS
DUP
PUSHB_1
 5
RS
LT
IF
PUSHB_1
 5
SWAP
WS
PUSHB_1
 6
SWAP
WS
ELSE
POP
POP
EIF
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 3
FDEF
SWAP
POP
SWAP
POP
DUP
ABS
PUSHB_2
 5
 98
WS
DUP
PUSHB_1
 6
SWAP
WS
PUSHB_3
 10
 1
 2
LOOPCALL
POP
DUP
PUSHB_1
 6
RS
DUP
ROLL
DUP
ROLL
PUSHB_1
 0
CALL
PUSHB_2
 48
 5
CINDEX
ROLL
LTEQ
IF
ADD
LT
ELSE
SUB
GT
EIF
IF
SWAP
EIF
POP
DUP
PUSHB_1
 64
GTEQ
IF
PUSHB_1
 0
CALL
ELSE
POP
PUSHB_1
 64
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
ENDF
PUSHB_1
 4
FDEF
PUSHB_1
 8
SWAP
WS
PUSHB_1
 7
SWAP
WS
PUSHB_1
 0
SWAP
WS
PUSHB_1
 0
RS
PUSHB_1
 7
RS
LTEQ
IF
PUSHB_1
 8
RS
CALL
PUSHB_3
 0
 1
 0
RS
ADD
WS
PUSHB_1
 22
NEG
JMPR
EIF
ENDF
PUSHB_1
 5
FDEF
PUSHB_1
 0
RS
DUP
RCVT
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
WCVTP
ENDF
PUSHB_1
 6
FDEF
PUSHB_1
 0
RS
DUP
RCVT
DUP
PUSHB_1
 0
CALL
SWAP
PUSHB_2
 6
 4
CINDEX
ADD
DUP
RCVT
ROLL
SWAP
SUB
DUP
ABS
DUP
PUSHB_1
 32
LT
IF
POP
PUSHB_1
 0
ELSE
PUSHB_1
 48
LT
IF
PUSHB_1
 32
ELSE
PUSHB_1
 64
EIF
EIF
SWAP
PUSHB_1
 0
LT
IF
NEG
EIF
PUSHB_1
 3
CINDEX
SWAP
SUB
WCVTP
WCVTP
ENDF
PUSHB_1
 7
FDEF
PUSHB_2
 5
 5
RCVT
PUSHB_1
 1
SUB
WCVTP
ENDF
PUSHB_1
 8
FDEF
PUSHB_1
 1
ADD
DUP
DUP
PUSHB_1
 10
RS
MD[orig]
PUSHB_1
 0
LT
IF
DUP
PUSHB_1
 10
SWAP
WS
EIF
PUSHB_1
 11
RS
MD[orig]
PUSHB_1
 0
GT
IF
DUP
PUSHB_1
 11
SWAP
WS
EIF
ENDF
PUSHB_1
 9
FDEF
DUP
PUSHW_1
 1024
DIV
DUP
PUSHW_1
 1024
MUL
ROLL
SWAP
SUB
PUSHB_1
 12
RS
ADD
DUP
ROLL
ADD
DUP
PUSHB_1
 12
SWAP
WS
SWAP
ENDF
PUSHB_1
 10
FDEF
PUSHB_2
 0
 13
RS
NEQ
IF
PUSHB_2
 13
 13
RS
PUSHB_1
 1
SUB
WS
PUSHB_1
 9
CALL
EIF
PUSHB_1
 0
RS
PUSHB_1
 2
CINDEX
WS
PUSHB_3
 0
 1
 0
RS
ADD
WS
PUSHB_2
 10
 2
CINDEX
WS
PUSHB_2
 11
 2
CINDEX
WS
PUSHB_1
 1
SZPS
SWAP
DUP
PUSHB_1
 3
CINDEX
LT
IF
PUSHB_1
 0
RS
PUSHB_1
 4
CINDEX
WS
ROLL
ROLL
DUP
ROLL
SWAP
SUB
PUSHB_1
 8
LOOPCALL
POP
SWAP
PUSHB_1
 1
SUB
DUP
ROLL
SWAP
SUB
PUSHB_1
 8
LOOPCALL
POP
ELSE
PUSHB_1
 0
RS
PUSHB_1
 2
CINDEX
WS
PUSHB_1
 2
CINDEX
SUB
PUSHB_1
 8
LOOPCALL
POP
EIF
PUSHB_1
 10
RS
GC[orig]
PUSHB_1
 11
RS
GC[orig]
ADD
PUSHB_1
 128
DIV
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
PUSHB_2
 0
 0
SZP0
SWAP
WCVTP
PUSHB_1
 1
RS
PUSHB_1
 0
MIAP[no-rnd]
PUSHB_3
 1
 1
 1
RS
ADD
WS
ENDF
PUSHB_1
 11
FDEF
PUSHB_2
 0
 5
RCVT
EQ
IF
SVTCA[y-axis]
PUSHB_1
 13
SWAP
WS
DUP
ADD
PUSHB_1
 1
SUB
PUSHB_6
 14
 14
 1
 0
 12
 0
WS
WS
ROLL
ADD
PUSHB_2
 10
 4
CALL
PUSHB_1
 105
CALL
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 12
FDEF
PUSHB_2
 0
 11
CALL
ENDF
PUSHB_1
 13
FDEF
PUSHB_2
 1
 11
CALL
ENDF
PUSHB_1
 14
FDEF
PUSHB_2
 2
 11
CALL
ENDF
PUSHB_1
 15
FDEF
PUSHB_2
 3
 11
CALL
ENDF
PUSHB_1
 16
FDEF
PUSHB_2
 4
 11
CALL
ENDF
PUSHB_1
 17
FDEF
PUSHB_2
 5
 11
CALL
ENDF
PUSHB_1
 18
FDEF
PUSHB_2
 6
 11
CALL
ENDF
PUSHB_1
 19
FDEF
PUSHB_2
 7
 11
CALL
ENDF
PUSHB_1
 20
FDEF
PUSHB_2
 8
 11
CALL
ENDF
PUSHB_1
 21
FDEF
PUSHB_2
 9
 11
CALL
ENDF
PUSHB_1
 22
FDEF
PUSHB_1
 7
CALL
PUSHB_2
 0
 5
RCVT
EQ
IF
SVTCA[y-axis]
PUSHB_1
 13
SWAP
WS
DUP
ADD
PUSHB_1
 1
SUB
PUSHB_6
 14
 14
 1
 0
 12
 0
WS
WS
ROLL
ADD
PUSHB_2
 10
 4
CALL
PUSHB_1
 105
CALL
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 23
FDEF
PUSHB_2
 0
 22
CALL
ENDF
PUSHB_1
 24
FDEF
PUSHB_2
 1
 22
CALL
ENDF
PUSHB_1
 25
FDEF
PUSHB_2
 2
 22
CALL
ENDF
PUSHB_1
 26
FDEF
PUSHB_2
 3
 22
CALL
ENDF
PUSHB_1
 27
FDEF
PUSHB_2
 4
 22
CALL
ENDF
PUSHB_1
 28
FDEF
PUSHB_2
 5
 22
CALL
ENDF
PUSHB_1
 29
FDEF
PUSHB_2
 6
 22
CALL
ENDF
PUSHB_1
 30
FDEF
PUSHB_2
 7
 22
CALL
ENDF
PUSHB_1
 31
FDEF
PUSHB_2
 8
 22
CALL
ENDF
PUSHB_1
 32
FDEF
PUSHB_2
 9
 22
CALL
ENDF
PUSHB_1
 33
FDEF
DUP
ADD
PUSHB_1
 14
ADD
DUP
RS
SWAP
PUSHB_1
 1
ADD
RS
PUSHB_1
 2
CINDEX
PUSHB_1
 2
CINDEX
LTEQ
IF
SWAP
DUP
ALIGNRP
PUSHB_1
 1
ADD
SWAP
PUSHB_1
 18
NEG
JMPR
ELSE
POP
POP
EIF
ENDF
PUSHB_1
 34
FDEF
PUSHB_1
 33
CALL
PUSHB_1
 33
LOOPCALL
ENDF
PUSHB_1
 35
FDEF
DUP
DUP
GC[orig]
DUP
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
SWAP
SUB
SHPIX
SWAP
DUP
ROLL
NEQ
IF
DUP
GC[orig]
DUP
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
SWAP
SUB
SHPIX
ELSE
POP
EIF
ENDF
PUSHB_1
 36
FDEF
PUSHB_2
 0
 5
RCVT
EQ
IF
SVTCA[y-axis]
PUSHB_1
 1
SZPS
PUSHB_1
 35
LOOPCALL
PUSHB_1
 1
SZP2
IUP[y]
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 37
FDEF
PUSHB_1
 7
CALL
PUSHB_2
 0
 5
RCVT
EQ
IF
SVTCA[y-axis]
PUSHB_1
 1
SZPS
PUSHB_1
 35
LOOPCALL
PUSHB_1
 1
SZP2
IUP[y]
ELSE
CLEAR
EIF
ENDF
PUSHB_1
 38
FDEF
DUP
SHC[rp1]
PUSHB_1
 1
ADD
ENDF
PUSHB_1
 39
FDEF
SVTCA[y-axis]
PUSHB_1
 3
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
PUSHB_1
 0
CALL
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
PUSHB_1
 0
CALL
PUSHB_1
 0
SZPS
PUSHB_5
 0
 0
 0
 0
 0
WCVTP
MIAP[no-rnd]
SWAP
SHPIX
PUSHB_2
 38
 1
SZP2
LOOPCALL
ENDF
PUSHB_1
 40
FDEF
DUP
ALIGNRP
DUP
GC[orig]
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
PUSHB_1
 0
RS
SUB
SHPIX
ENDF
PUSHB_1
 41
FDEF
MDAP[no-rnd]
SLOOP
ALIGNRP
ENDF
PUSHB_1
 42
FDEF
DUP
ALIGNRP
DUP
GC[orig]
DUP
PUSHB_1
 2
RCVT
MUL
PUSHB_1
 1
RCVT
DIV
ADD
PUSHB_1
 0
RS
SUB
PUSHB_1
 1
RS
MUL
SHPIX
ENDF
PUSHB_1
 43
FDEF
PUSHB_2
 2
 0
SZPS
CINDEX
DUP
MDAP[no-rnd]
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_1
 2
CINDEX
MD[grid]
ROLL
ROLL
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DIV
PUSHB_1
 1
SWAP
WS
PUSHB_3
 42
 1
 1
SZP2
SZP1
LOOPCALL
ENDF
PUSHB_1
 44
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 6
RCVT
CALL
NEG
ROLL
MDAP[no-rnd]
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
ENDF
PUSHB_1
 45
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 4
SWAP
WS
PUSHB_1
 6
RCVT
CALL
DUP
PUSHB_1
 96
LT
IF
DUP
PUSHB_1
 64
LTEQ
IF
PUSHB_4
 2
 32
 3
 32
ELSE
PUSHB_4
 2
 38
 3
 26
EIF
WS
WS
SWAP
DUP
PUSHB_1
 9
RS
DUP
ROLL
SWAP
GC[orig]
SWAP
GC[orig]
SWAP
SUB
SWAP
GC[cur]
ADD
PUSHB_1
 4
RS
PUSHB_1
 128
DIV
ADD
DUP
PUSHB_1
 0
CALL
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 2
RS
ADD
ABS
SWAP
PUSHB_1
 3
RS
SUB
ABS
LT
IF
PUSHB_1
 2
RS
SUB
ELSE
PUSHB_1
 3
RS
ADD
EIF
PUSHB_1
 3
CINDEX
PUSHB_1
 128
DIV
SUB
SWAP
DUP
DUP
PUSHB_1
 4
MINDEX
SWAP
GC[cur]
SUB
SHPIX
ELSE
SWAP
PUSHB_1
 9
RS
GC[cur]
PUSHB_1
 2
CINDEX
PUSHB_1
 9
RS
GC[orig]
SWAP
GC[orig]
SWAP
SUB
ADD
DUP
PUSHB_1
 4
RS
PUSHB_1
 128
DIV
ADD
SWAP
DUP
PUSHB_1
 0
CALL
SWAP
PUSHB_1
 4
RS
ADD
PUSHB_1
 0
CALL
PUSHB_1
 5
CINDEX
SUB
PUSHB_1
 5
CINDEX
PUSHB_1
 128
DIV
PUSHB_1
 4
MINDEX
SUB
DUP
PUSHB_1
 4
CINDEX
ADD
ABS
SWAP
PUSHB_1
 3
CINDEX
ADD
ABS
LT
IF
POP
ELSE
SWAP
POP
EIF
SWAP
DUP
DUP
PUSHB_1
 4
MINDEX
SWAP
GC[cur]
SUB
SHPIX
EIF
ENDF
PUSHB_1
 46
FDEF
PUSHB_1
 0
SZPS
DUP
DUP
DUP
PUSHB_1
 5
MINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
SWAP
ALIGNRP
SHPIX
ENDF
PUSHB_1
 47
FDEF
PUSHB_1
 0
SZPS
DUP
PUSHB_1
 9
SWAP
WS
DUP
DUP
DUP
GC[cur]
SWAP
GC[orig]
PUSHB_1
 0
CALL
SWAP
SUB
SHPIX
ENDF
PUSHB_1
 48
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 3
CINDEX
PUSHB_1
 2
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 0
EQ
IF
MDAP[no-rnd]
DUP
ALIGNRP
SWAP
POP
ELSE
PUSHB_1
 2
CINDEX
PUSHB_1
 2
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 5
CINDEX
PUSHB_1
 4
CINDEX
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 6
CINDEX
PUSHB_1
 5
CINDEX
MD[grid]
PUSHB_1
 2
CINDEX
SUB
PUSHB_1
 1
RCVT
MUL
SWAP
DIV
MUL
PUSHB_1
 1
RCVT
DIV
ADD
SWAP
MDAP[no-rnd]
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
SWAP
POP
EIF
ENDF
PUSHB_1
 49
FDEF
PUSHB_1
 0
SZPS
DUP
PUSHB_1
 9
RS
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
ADD
PUSHB_1
 32
ADD
FLOOR
PUSHB_1
 128
DIV
SWAP
DUP
DUP
ALIGNRP
ROLL
SHPIX
ENDF
PUSHB_1
 50
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
GT
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 51
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
LT
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 52
FDEF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
GT
IF
DUP
ALIGNRP
EIF
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
LT
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 59
FDEF
PUSHB_1
 0
SZP2
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_3
 0
 1
 1
SZP2
SZP1
SZP0
MDAP[no-rnd]
PUSHB_1
 40
LOOPCALL
ENDF
PUSHB_1
 60
FDEF
PUSHB_1
 0
SZP2
DUP
GC[orig]
PUSHB_1
 0
SWAP
WS
PUSHB_3
 0
 1
 1
SZP2
SZP1
SZP0
MDAP[no-rnd]
PUSHB_1
 40
LOOPCALL
ENDF
PUSHB_1
 61
FDEF
PUSHB_2
 0
 1
SZP1
SZP0
PUSHB_1
 41
LOOPCALL
ENDF
PUSHB_1
 62
FDEF
PUSHB_1
 43
LOOPCALL
ENDF
PUSHB_1
 53
FDEF
PUSHB_1
 44
CALL
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
GT
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 73
FDEF
PUSHB_3
 0
 0
 53
CALL
ENDF
PUSHB_1
 74
FDEF
PUSHB_3
 0
 1
 53
CALL
ENDF
PUSHB_1
 75
FDEF
PUSHB_3
 1
 0
 53
CALL
ENDF
PUSHB_1
 76
FDEF
PUSHB_3
 1
 1
 53
CALL
ENDF
PUSHB_1
 54
FDEF
PUSHB_1
 45
CALL
ROLL
DUP
DUP
ALIGNRP
PUSHB_1
 4
SWAP
WS
ROLL
SHPIX
SWAP
DUP
MDAP[no-rnd]
GC[cur]
PUSHB_1
 2
CINDEX
GC[cur]
GT
IF
DUP
ALIGNRP
EIF
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
PUSHB_1
 4
RS
MDAP[no-rnd]
PUSHB_1
 34
CALL
ENDF
PUSHB_1
 85
FDEF
PUSHB_3
 0
 0
 54
CALL
ENDF
PUSHB_1
 86
FDEF
PUSHB_3
 0
 1
 54
CALL
ENDF
PUSHB_1
 87
FDEF
PUSHB_3
 1
 0
 54
CALL
ENDF
PUSHB_1
 88
FDEF
PUSHB_3
 1
 1
 54
CALL
ENDF
PUSHB_1
 55
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
MINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
PUSHB_1
 6
RCVT
CALL
SWAP
DUP
ALIGNRP
DUP
MDAP[no-rnd]
SWAP
SHPIX
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 77
FDEF
PUSHB_3
 0
 0
 55
CALL
ENDF
PUSHB_1
 78
FDEF
PUSHB_3
 0
 1
 55
CALL
ENDF
PUSHB_1
 79
FDEF
PUSHB_3
 1
 0
 55
CALL
ENDF
PUSHB_1
 80
FDEF
PUSHB_3
 1
 1
 55
CALL
ENDF
PUSHB_1
 56
FDEF
PUSHB_2
 9
 4
CINDEX
WS
PUSHB_1
 0
SZPS
PUSHB_1
 4
CINDEX
PUSHB_1
 4
CINDEX
DUP
MDAP[no-rnd]
GC[orig]
SWAP
GC[orig]
SWAP
SUB
DUP
PUSHB_1
 4
SWAP
WS
PUSHB_1
 6
RCVT
CALL
DUP
PUSHB_1
 96
LT
IF
DUP
PUSHB_1
 64
LTEQ
IF
PUSHB_4
 2
 32
 3
 32
ELSE
PUSHB_4
 2
 38
 3
 26
EIF
WS
WS
SWAP
DUP
GC[orig]
PUSHB_1
 4
RS
PUSHB_1
 128
DIV
ADD
DUP
PUSHB_1
 0
CALL
DUP
ROLL
ROLL
SUB
DUP
PUSHB_1
 2
RS
ADD
ABS
SWAP
PUSHB_1
 3
RS
SUB
ABS
LT
IF
PUSHB_1
 2
RS
SUB
ELSE
PUSHB_1
 3
RS
ADD
EIF
PUSHB_1
 3
CINDEX
PUSHB_1
 128
DIV
SUB
PUSHB_1
 2
CINDEX
GC[cur]
SUB
SHPIX
SWAP
DUP
ALIGNRP
SWAP
SHPIX
ELSE
POP
DUP
DUP
GC[cur]
SWAP
GC[orig]
PUSHB_1
 0
CALL
SWAP
SUB
SHPIX
POP
EIF
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 65
FDEF
PUSHB_3
 0
 0
 56
CALL
ENDF
PUSHB_1
 66
FDEF
PUSHB_3
 0
 1
 56
CALL
ENDF
PUSHB_1
 67
FDEF
PUSHB_3
 1
 0
 56
CALL
ENDF
PUSHB_1
 68
FDEF
PUSHB_3
 1
 1
 56
CALL
ENDF
PUSHB_1
 64
FDEF
PUSHB_1
 9
SWAP
WS
PUSHB_1
 63
CALL
ENDF
PUSHB_1
 57
FDEF
PUSHB_1
 44
CALL
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 69
FDEF
PUSHB_3
 0
 0
 57
CALL
ENDF
PUSHB_1
 70
FDEF
PUSHB_3
 0
 1
 57
CALL
ENDF
PUSHB_1
 71
FDEF
PUSHB_3
 1
 0
 57
CALL
ENDF
PUSHB_1
 72
FDEF
PUSHB_3
 1
 1
 57
CALL
ENDF
PUSHB_1
 58
FDEF
PUSHB_1
 45
CALL
POP
SWAP
DUP
DUP
ALIGNRP
PUSHB_1
 4
SWAP
WS
SWAP
SHPIX
PUSHB_2
 34
 1
SZP1
CALL
PUSHB_1
 4
RS
MDAP[no-rnd]
PUSHB_1
 34
CALL
ENDF
PUSHB_1
 81
FDEF
PUSHB_3
 0
 0
 58
CALL
ENDF
PUSHB_1
 82
FDEF
PUSHB_3
 0
 1
 58
CALL
ENDF
PUSHB_1
 83
FDEF
PUSHB_3
 1
 0
 58
CALL
ENDF
PUSHB_1
 84
FDEF
PUSHB_3
 1
 1
 58
CALL
ENDF
PUSHB_1
 63
FDEF
PUSHB_1
 0
SZPS
RCVT
SWAP
DUP
MDAP[no-rnd]
DUP
GC[cur]
ROLL
SWAP
SUB
SHPIX
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 89
FDEF
PUSHB_1
 46
CALL
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 90
FDEF
PUSHB_1
 46
CALL
PUSHB_1
 50
CALL
ENDF
PUSHB_1
 91
FDEF
PUSHB_1
 46
CALL
PUSHB_1
 51
CALL
ENDF
PUSHB_1
 92
FDEF
PUSHB_1
 0
SZPS
PUSHB_1
 46
CALL
PUSHB_1
 52
CALL
ENDF
PUSHB_1
 93
FDEF
PUSHB_1
 47
CALL
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 94
FDEF
PUSHB_1
 47
CALL
PUSHB_1
 50
CALL
ENDF
PUSHB_1
 95
FDEF
PUSHB_1
 47
CALL
PUSHB_1
 51
CALL
ENDF
PUSHB_1
 96
FDEF
PUSHB_1
 47
CALL
PUSHB_1
 52
CALL
ENDF
PUSHB_1
 97
FDEF
PUSHB_1
 48
CALL
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 98
FDEF
PUSHB_1
 48
CALL
PUSHB_1
 50
CALL
ENDF
PUSHB_1
 99
FDEF
PUSHB_1
 48
CALL
PUSHB_1
 51
CALL
ENDF
PUSHB_1
 100
FDEF
PUSHB_1
 48
CALL
PUSHB_1
 52
CALL
ENDF
PUSHB_1
 101
FDEF
PUSHB_1
 49
CALL
MDAP[no-rnd]
PUSHB_2
 34
 1
SZP1
CALL
ENDF
PUSHB_1
 102
FDEF
PUSHB_1
 49
CALL
PUSHB_1
 50
CALL
ENDF
PUSHB_1
 103
FDEF
PUSHB_1
 49
CALL
PUSHB_1
 51
CALL
ENDF
PUSHB_1
 104
FDEF
PUSHB_1
 49
CALL
PUSHB_1
 52
CALL
ENDF
PUSHB_1
 105
FDEF
CALL
PUSHB_1
 8
NEG
PUSHB_1
 3
DEPTH
LT
JROT
PUSHB_1
 1
SZP2
IUP[y]
ENDF
EndTTInstrs
ShortTable: cvt  23
  0
  0
  0
  0
  0
  0
  0
  232
  185
  232
  185
  1276
  0
  1382
  956
  0
  -342
  1309
  -37
  1393
  977
  -33
  -362
EndShort
ShortTable: maxp 16
  1
  0
  304
  109
  5
  128
  5
  2
  34
  48
  106
  0
  159
  2402
  3
  1
EndShort
LangName: 1033 "" "" "" "RaphLevien,KirillTkachev(cyreal.org): Inconsolata Bold: 2011" "" "Version 1.015; ttfautohint (v0.92) -l 8 -r 50 -G 200 -x 14 -w +ACIA-G+ACIA" "" "" "Raph Levien, Kirill Tkachev(cyreal.org)" "Raph Levien, Kirill Tkachev(cyreal.org)" "" "" "" "Copyright 2011 Raph Levien+AA0ADQAA-Licensed under the Apache License, Version 2.0 (the +ACIA-License+ACIA);+AA0A-you may not use this file except in compliance with the License.+AA0A-You may obtain a copy of the License at+AA0ADQAA    http://www.apache.org/licenses/LICENSE-2.0+AA0ADQAA-Unless required by applicable law or agreed to in writing, software+AA0A-distributed under the License is distributed on an +ACIA-AS IS+ACIA BASIS,+AA0A-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.+AA0A-See the License for the specific language governing permissions and+AA0A-limitations under the License." "http://www.apache.org/licenses/LICENSE-2.0.html" "" "" "" "Inconsolata"
GaspTable: 1 65535 15 1
Encoding: UnicodeBmp
UnicodeInterp: none
NameList: AGL For New Fonts
DisplaySize: -48
AntiAlias: 1
FitToEm: 0
WinInfo: 51 17 8
EndSplineFont
